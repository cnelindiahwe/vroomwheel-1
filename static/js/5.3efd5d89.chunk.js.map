{"version":3,"sources":["components/layouts/Partners.js","helper/helper.js","helper/blogHelper.js"],"names":["settings","infinite","slidesToShow","slidesToScroll","arrows","dots","dotsClass","autoplay","autoplaySpeed","speed","cssEase","responsive","breakpoint","Partners","className","style","color","partners","map","item","i","to","src","img","alt","Component","getAuthor","items","author","filter","includes","id","getTags","tags","getCategories","category","getType","cartype","window","location","href","getBlog","blogpost","blog","parseInt","getRecentPost","post","timestamp","Date","postdate","getDateInitials","string","names","split","initials","substring","length","toUpperCase","getPostNavigation","index","output","undefined","push","getFilteredPosts","posts","cat","tag","searchQuery","catgoryFilter","tagFilter","authorFilter","searchFilter","title","toLowerCase","count","blogcategory","setCategoriesCount","today","slice","month","getTime","getDate","getMonth","getFullYear","setDemoDate"],"mappings":"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","file":"static/js/5.3efd5d89.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from 'react-slick';\r\nimport partners from \"../../data/partners.json\"\r\n\r\nconst settings = {\r\n    infinite: true,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 1,\r\n    arrows: false,\r\n    dots: true,\r\n    dotsClass: \"d-flex slick-dots\",\r\n    autoplay: true,\r\n    autoplaySpeed: 2000,\r\n    speed: 500,\r\n    cssEase: 'linear',\r\n    responsive: [\r\n        {\r\n            breakpoint: 1200,\r\n            settings: {\r\n                arrows: true,\r\n                slidesToShow: 5\r\n            }\r\n        }, {\r\n            breakpoint: 768,\r\n            settings: {\r\n                arrows: false,\r\n                dots: true,\r\n                slidesToShow: 4\r\n            }\r\n        }, {\r\n            breakpoint: 576,\r\n            settings: {\r\n                arrows: false,\r\n                dots: true,\r\n                slidesToShow: 3\r\n            }\r\n        }, {\r\n            breakpoint: 400,\r\n            settings: {\r\n                arrows: false,\r\n                dots: true,\r\n                slidesToShow: 2\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nclass Partners extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"section-header text-center\">\r\n                    <div className=\"section-heading\">\r\n                        <h3 className=\"text-custom-black\" style={{ color: \"#2e054e\" }}>Popular <span className=\"text-custom-blue\">Brands</span></h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Slider className=\"carousel\" {...settings}>\r\n                            {partners.map((item, i) => (\r\n                                <div key={i} className=\"slide-item col-12\">\r\n                                    <div className=\"partner-box bx-wrapper animate-img\">\r\n                                        <Link to=\"#\"> <img src={process.env.PUBLIC_URL + \"/\" + item.img} className=\"img-fluid image-fit\" alt=\"img\" /> </Link>\r\n                                    </div>\r\n                                    <div className=\"partner-box bx-wrapper animate-img mt-3\">\r\n                                        <Link to=\"#\"> <img src={process.env.PUBLIC_URL + \"/\" + item.img} className=\"img-fluid image-fit\" alt=\"img\" /> </Link>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Partners;","import author from '../data/authors.json';\r\nimport tags from '../data/blogtags.json';\r\nimport category from '../data/blogcategory.json';\r\nimport cartype from '../data/cartype.json';\r\n\r\n// Author\r\nfunction getAuthor(items) {\r\n    var elems = author.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Tags\r\nfunction getTags(items) {\r\n    var elems = tags.filter(item => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Categories\r\nfunction getCategories(items) {\r\n    var elems = category.filter(item => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// cartype\r\nfunction getType(items) {\r\n    var elems = cartype.filter(item => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\nfunction Rating(rating) {\r\n    let stars = [];\r\n    for (let i = 0; i < 5; i++) {\r\n        stars.push(<i className=\"far fa-star\" key={i}/>);\r\n    }\r\n    if (rating && rating > 0) {\r\n        for (let i = 0; i <= rating - 1; i++) {\r\n            stars[i] = <i className=\"far fa-star active\" key={i}/>;\r\n        }\r\n    }\r\n    return stars;\r\n};\r\n// Social Share\r\nconst pageUrl = window.location.href;\r\nfunction socialShare(title) {\r\n    var socialIcons = [\r\n        {\r\n            title: \"facebook\",\r\n            iconClass: \"fab fa-facebook-f\",\r\n            link: \"https://www.facebook.com/sharer/sharer.php?u=\" + encodeURIComponent(pageUrl) + \"\"\r\n        },\r\n        {\r\n            title: \"twitter\",\r\n            iconClass: \"fab fa-twitter\",\r\n            link: \"http://twitter.com/intent/tweet?text=\" + encodeURIComponent(title) + \"&\" + encodeURIComponent(pageUrl) + \"\"\r\n        },\r\n        {\r\n            title: \"linkedin\",\r\n            iconClass: \"fab fa-linkedin-in\",\r\n            link: \"https://www.linkedin.com/shareArticle?mini=true&url=\" + encodeURIComponent(pageUrl) + \"&title=\" + encodeURIComponent(title) + \"\"\r\n        },\r\n        {\r\n            title: \"pinterest\",\r\n            iconClass: \"fab fa-pinterest-p\",\r\n            link: \"http://pinterest.com/pin/create/button/?url=\" + encodeURIComponent(pageUrl) + \"\"\r\n        }\r\n    ];\r\n    return socialIcons;\r\n}\r\nexport { getAuthor, Rating, socialShare, getTags, getCategories, getType };","import React from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport blogpost from \"../data/blog.json\";\r\nimport blogcategory from '../data/blogcategory.json';\r\n\r\nfunction setCategoriesCount() {\r\n    for (let i = 0; i < blogcategory.length; i++) {\r\n        var count = blogpost.filter(post => { return post.category.includes(parseInt(blogcategory[i].id)) });\r\n        count = count.length;\r\n        blogcategory[i].count = count;\r\n    }\r\n}\r\nsetCategoriesCount();\r\n// Post details\r\nfunction getBlog(id) {\r\n    return blogpost.filter(blog => { return blog.id === parseInt(id) })[0];\r\n}\r\n// Related post\r\nfunction getPostByCategory(items, pageRoute) {\r\n    var elems = blogpost.filter((post) => { return parseInt(post.id) !== parseInt(pageRoute) && post.category.some(r => items.includes(r)) });\r\n    return elems;\r\n}\r\n\r\n// Recent post\r\nfunction changeToMonth(month) {\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return months[month];\r\n}\r\n\r\nfunction setDemoDate() {\r\n    var today = new Date();\r\n    blogpost.slice(0, 3).map((post) => {\r\n         post.timestamp = today.getTime() - (3 * 24 * 60 * 60 * 1000);\r\n        // Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\r\n        // in the blog.json object\r\n        post.postdate = `${today.getDate()} ${changeToMonth(today.getMonth())}, ${today.getFullYear()}`;\r\n        return post;\r\n    });\r\n}\r\n\r\nfunction getRecentPost() {\r\n    var elems = blogpost.filter(post => {\r\n        return post.timestamp < new Date(post.postdate);\r\n    });\r\n    return elems;\r\n}\r\n\r\nsetDemoDate();\r\n// Get Date\r\nfunction getDateInitials(string) {\r\n    var names = string.split(' '),\r\n        initials = '<div class=\"text-custom-white fw-600 date bg-custom-blue\">' + names[0].substring(0, 2) + '</div>';\r\n\r\n    if (names.length > 2) {\r\n        initials += '<div class=\"text-custom-white year\">' +names[names.length - 2].substring(0, 3).toUpperCase() + \" 22\";\r\n    }\r\n    return initials;\r\n}\r\n// Pagination\r\nfunction getPostNavigation(items, index) {\r\n    var output = [],\r\n        id, item;\r\n    if (items[index - 1] !== undefined && index - 1 !== -1) {\r\n        item = items[index - 1];\r\n        id = item.id;\r\n        // Show the previous button \r\n        output.push(<li className=\"page-item\" key={id}><Link className=\"page-link\" to={\"/blog-details/\" + parseInt(id)}>Previous</Link></li>);\r\n    }\r\n    if (items[index + 1] !== undefined && index <= items.length - 1) {\r\n        // Show next button \r\n        item = items[index + 1];\r\n        id = item.id;\r\n        output.push(<li className=\"page-item\" key={id}><Link className=\"page-link\" to={\"/blog-details/\" + parseInt(id)}>Next</Link></li>);\r\n    }\r\n\r\n    return output;\r\n}\r\n// Filter \r\nfunction getFilteredPosts(posts, filter = { cat: '', tag: '', author: '', searchQuery: '' }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\r\n    var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== '';\r\n    var searchFilter = filter.searchQuery !== undefined && filter.searchQuery !== null && filter.searchQuery !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.category !== undefined && post.category !== null) && post.category.includes(parseInt(filter.cat))\r\n        })\r\n    } \r\n    // Tag filter\r\n    if (tagFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.tags !== undefined && post.tags !== null) && post.tags.includes(parseInt(filter.tag))\r\n        })\r\n    }\r\n    // Author filter\r\n    if (authorFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.author !== undefined && post.author !== null) && post.author.includes(parseInt(filter.author))\r\n        })\r\n    }\r\n    if (searchFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.title !== undefined && post.title !== null) && post.title.toLowerCase().includes(filter.searchQuery.toLowerCase())\r\n        })\r\n    }\r\n    return posts;\r\n}\r\nexport { getBlog, getFilteredPosts, getRecentPost, getPostByCategory, getDateInitials, getPostNavigation };"],"sourceRoot":""}